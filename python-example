
#!/usr/bin/env python
import requests

#Import this to supporess insecure SSL connections to the Solidfire Box
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from subprocess import call
from sys import argv
import keystoneclient.v2_0.client as ksclient
from os import environ as env
import json
from pprint import pprint

#from openstack.client import OpenStackClient
new_project=env['new_project']
new_project_description=env['new_project_description']
new_email=env['new_email']
new_password=env['new_password']
new_user=env['new_user']

####################################################################################
#########################################keystone###################################

#Instantiate a Keystone session object with username and password
keystone = ksclient.Client(auth_url=OS_AUTH_URL,
                           username=OS_USERNAME,
                           password=OS_PASSWORD,
                           tenant_name=OS_TENANT_NAME)

#Store all users in a list called user()
user = keystone.users.list()

### Search for user ID and delete the user
for i in range(len(user)):
    if user[i].__dict__.values()[1].find(new_user) != -1:
        result = keystone.users.delete(user[i].__dict__.values()[6].values()[4])
        print result

####################################################################################
#######################################Solidfire####################################
#Turn off warnings of insecure SSL connections to the Solidfire Box
requests.packages.urllib3.disable_warnings()
#Turn off warnings of insecure SSL connections to the Solidfire Box
data = '{ "method": "ListClusterAdmins", "params": {}, "id":1}'
r = requests.post('https://10.20.44.105/json-rpc/8.2', data=data, verify=False, auth=(OS_USERNAME,OS_PASSWORD))
sfuser = r.json()['result'].values()[0]
for i in range(len(sfuser)):
    if r.json()['result'].values()[0][i].values()[4] == new_user:
        adminID = r.json()['result'].values()[0][i].values()[2]
        data = '{ "method": "RemoveClusterAdmin", "params": {"clusterAdminID" : %s }, "id" : 1}' % adminID
r = requests.post('https://10.20.44.105/json-rpc/8.2', data=data, verify=False, auth=(OS_USERNAME,OS_PASSWORD))
print r.json()

